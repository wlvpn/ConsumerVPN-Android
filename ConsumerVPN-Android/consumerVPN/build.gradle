apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode Integer.valueOf(System.getenv("CI_JOB_ID") ?: "0")
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'CLIENT', "\"Android-${versionName}b${versionCode}\""
        buildConfigField 'String', 'BASE_HOSTNAME', '"wlvpn.com"'
        buildConfigField 'String', 'AUTH_SUFFIX', '""'
        buildConfigField 'String', 'PROTOCOL_LIST_API', '"protocols"'
        buildConfigField 'String', 'LOGIN_API', '"login"'
        buildConfigField 'String', 'REFRESH_API', '"login"'
        buildConfigField 'String', 'SERVER_LIST_API', '"servers"'
        buildConfigField 'String', 'IP_GEO', '"https://ipgeo.wlvpn.com/v2?apikey=YOUR_API_KEY"'
        buildConfigField 'String', 'CONFIGURATION_URL', '""'
        buildConfigField 'String', 'CERTIFICATE_URL', '""'

        multiDexEnabled true
    }

    signingConfigs {
        consumervpn {
            storeFile rootProject.file("config/keystore/ConsumerVpn.jks")
            keyAlias "secureit"
            keyPassword "SecureIt2016HW"
            storePassword "SecureIt2016HW"
        }
    }

    flavorDimensions "brand"

    productFlavors {
        consumervpn {
            dimension "brand"
            signingConfig signingConfigs.consumervpn
            applicationId 'com.consumervpn.vpn'

            buildConfigField 'String', 'ACCOUNT_NAME', '"secureit"'
            buildConfigField 'String', 'AUTH_SUFFIX', '"secureit"'
            buildConfigField 'String', 'API_KEY', '"YOUR_API_KEY"'
            buildConfigField 'String', 'SUPPORT_URL', '"https://www.wlvpn.com/"'
            buildConfigField 'String', 'SIGN_UP', '"https://www.wlvpn.com/"'
            buildConfigField 'String', 'FORGOT_PASS', '"https://www.wlvpn.com/"'
            buildConfigField utils.javaMapType, 'CONNECTION_TABS', utils.getTabsMapValues(true, true, true)
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'ENDPOINT', '"https://api.wlvpn.com/v3%s"'
            debuggable true
        }

        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'ENDPOINT', '"https://api.wlvpn.com/v3/%s"'
            signingConfig null
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def junit = "4.12"
    def androidSupportLibs = "27.1.1"
    def androidConstraint = "1.1.3"
    def androidMultiDex = "1.0.3"
    def dagger = "2.11"
    def rxjava = "1.3.8"
    def rxAndroid = "1.2.1"
    def timber = "4.7.1"
    def okhttp = "3.11.0"
    def commonsIO = "2.5"
    def rxBinding = "0.4.0"
    def autoValue = "1.2"
    def androidJob = "1.2.6"
    def pathView = "1.0.8@aar"
    def calligraphy = "2.3.0"
    def vpnSdk = "1.5.3.30370@aar"

    //Testing
    testImplementation "junit:junit:$junit"
    kaptTest "com.google.auto.value:auto-value:$autoValue"

    //internal
    implementation("com.gentlebreeze.vpn.sdk:sdk:$vpnSdk") {
        transitive = true
    }

    //Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'

    //Android
    implementation "com.android.support:support-annotations:$androidSupportLibs"
    implementation "com.android.support:design:$androidSupportLibs"
    implementation "com.android.support:appcompat-v7:$androidSupportLibs"
    implementation "com.android.support:customtabs:$androidSupportLibs"
    implementation "com.android.support:recyclerview-v7:$androidSupportLibs"
    implementation "com.android.support:multidex:$androidMultiDex"
    implementation "com.android.support.constraint:constraint-layout:$androidConstraint"

    //External
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "commons-io:commons-io:$commonsIO"
    implementation "io.reactivex:rxjava:$rxjava"
    implementation "io.reactivex:rxandroid:$rxAndroid"
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.jakewharton.rxbinding:rxbinding:$rxBinding"
    implementation "com.jakewharton.rxbinding:rxbinding-appcompat-v7:$rxBinding"
    implementation "com.evernote:android-job:$androidJob"
    implementation "com.eftimoff:android-pathview:$pathView"
    implementation "uk.co.chrisjenx:calligraphy:$calligraphy"

    //Annotation processing
    kapt "com.google.dagger:dagger-compiler:$dagger"

    implementation project(':flags')
}
