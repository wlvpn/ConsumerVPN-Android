apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

task checkstyle(type: Checkstyle) {
    ignoreFailures = true
    configFile project.getParent().file("config/quality/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = project.getParent().file("config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: project.assemble) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = project.getParent().file("config/quality/findbugs/findbugs-filter.xml")
    classes = files("${project.buildDir.getName()}/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination new File("${project.buildDir}/reports/findbugs/findbugs.xml")
        }
        html {
            destination new File("${project.buildDir}/reports/findbugs/findbugs.html")
        }
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ignoreFailures = false
    ruleSetFiles = project.getParent().files("config/quality/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination new File("${project.buildDir}/reports/pmd/pmd.xml")
        }
        html {
            destination new File("${project.buildDir}/reports/pmd/pmd.html")
        }
    }
}
